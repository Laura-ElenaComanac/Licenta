import 'package:f_logs/model/flog/flog.dart';
import 'package:flutter/material.dart';
import 'package:logger/logger.dart';
import 'package:projyproject/data/http_helper.dart';
import 'package:projyproject/model/user.dart';
import 'package:projyproject/model/userpost.dart';
import 'package:projyproject/repository/database.dart';
import 'package:projyproject/widgets/users_list_widget.dart';
import 'package:provider/provider.dart';

import '../../../../view_model/bloc.dart';

/* Rectangle Rectangle 5
    Autogenerated by FlutLab FTF Generator
  */
class GeneratedRectangle5Widget extends StatefulWidget {
  @override
  State<GeneratedRectangle5Widget> createState() =>
      _GeneratedRectangle5WidgetState();
}

class _GeneratedRectangle5WidgetState extends State<GeneratedRectangle5Widget> {
  Bloc get bloc => Provider.of<Bloc>(context, listen: false);
  late HttpHelper h = HttpHelper();

  // late Future<List<UserPost>> posts;
  // late Future<String> userid;

  // @override
  // void initState() {
  //   super.initState();
  //   userid = bloc.getLoggedUserId();
  //   posts = h.getUserPosts(userid);
  // }

  @override
  Widget build(BuildContext context) {
    Logger logger = Logger();

    late List<UserPost> posts = [];

    @override
    void initState() {
      super.initState();
      bloc.getLoggedUser().then((user) {
        String id = user.id;
        h.getUserPosts(id).then((posts) {
          posts = posts;
        });
      });
    }

    return Container(
        width: 358.0,
        height: 1054.0,
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(50.0),
        ),
        child: ClipRRect(
          borderRadius: BorderRadius.circular(50.0),
          child: Container(
            color: Color.fromARGB(255, 255, 255, 255),
            child: FutureBuilder<List<UserPost>?>(
                future: bloc.getUserPosts(),
                builder: (context, snapshot) {
                  if (snapshot.hasData) {
                    return ListView.builder(
                        clipBehavior: Clip.antiAlias,
                        itemCount: snapshot.data!.length,
                        itemBuilder: (context, index) {
                          return Card(
                              shadowColor: Colors.black,
                              elevation: 8,
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(30),
                              ),
                              child: Container(
                                  padding: EdgeInsets.all(12),
                                  decoration: BoxDecoration(
                                      gradient: LinearGradient(
                                          colors: [
                                        Color.fromARGB(255, 102, 59, 223),
                                        Color.fromARGB(255, 135, 134, 231),
                                        Color.fromARGB(255, 135, 134, 231),
                                        (Colors.white),
                                        //Color.fromARGB(255, 135, 134, 231),
                                        //Color.fromARGB(255, 102, 59, 223)
                                      ],
                                          begin: Alignment.topLeft,
                                          end: Alignment.bottomRight)),
                                  child: Center(
                                    child: Column(
                                      crossAxisAlignment:
                                          CrossAxisAlignment.center,
                                      children: [
                                        ListTile(
                                          textColor: Colors.white,
                                          //Color.fromARGB(255, 102, 59, 223),
                                          title: Text(
                                            snapshot.data![index].title,
                                            textAlign: TextAlign.center,
                                          ),
                                        ),
                                        ListTile(
                                          textColor: Colors.white,
                                          title: Text(
                                            snapshot.data![index].description,
                                            textAlign: TextAlign.center,
                                          ),
                                        ),
                                        ListTile(
                                          textColor: Colors.white,
                                          title: Text(
                                            snapshot.data![index].date,
                                            textAlign: TextAlign.center,
                                          ),
                                        )
                                      ],
                                    ),
                                  )));

                          return ListTile(
                            title: Text(snapshot.data![index].toString()),
                          );
                        });
                  } else if (snapshot.hasError) {
                    return Text(snapshot.error.toString());
                  } else {
                    return CircularProgressIndicator();
                  }
                }),
          ),
        ));
  }
}
